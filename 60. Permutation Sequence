class Solution {
    public String getPermutation(int n, int k) {
        String s="";
        for(int i=1;i<=n;i++){
            s+=i;
        }
        List<String> l= new ArrayList<>();
        kthPer(l,s,"");
        return l.get(k-1);
    }
    public static void kthPer(List<String> l,String s,String ans){
        if(s.length()==0){
            l.add(ans);
        }
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            String sa=s.substring(0,i)+s.substring(i+1,s.length());
            kthPer(l,sa,ans+ch);
        }
    }
}

///optimal solution
class Solution {
    public String getPermutation(int n, int k) {
        List<Integer> l=new ArrayList<>();
        int fact=1;
        for(int i=1;i<n;i++){
            fact*=i;
            l.add(i);
        }
        l.add(n);
        k=k-1;
        String ans="";
        while(true){
            ans=ans+l.get(k/fact);
            l.remove(k/fact);
            if(l.size()==0) break;
            k=k%fact;
            fact=fact/l.size();
        }
        return ans;
    }
}
